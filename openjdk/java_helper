#!/usr/bin/env python
# Java Helpers 
# Provide functions to help with working with various java tools

from distutils.version import LooseVersion
import urllib2
import re
import argparse

# Define some constants
MAVEN_URL = 'https://www.apache.org/dist/maven/maven-3/'
MAVEN_VERSION_PATTERN = r'\d+\.\d+\.\d+'
GRADLE_URL = 'https://gradle.org/releases'
GRADLE_VERSION_PATTERN = r'(<span>v\d+\.\d+(\.\d+)?)'
ANT_URL = 'http://archive.apache.org/dist/ant/binaries/'
ANT_VERSION_PATTERN = r'\d+\.\d+\.\d+'
SBT_URL = 'https://www.scala-sbt.org/download.html'
SBT_URL_PATTERN = r'https://[^"]*tgz'

def get_latest_version(url, pattern):
    """Return latest version of given tool 

    Args:
        url: url to search 
        pattern: regex pattern to get version

    Returns:
        A string representing the latest version of a given tool 
    """
    raw_html = urllib2.urlopen(url).read()
    raw_versions = re.finditer(pattern, raw_html)
    # strip out any leading text 
    clean_versions = map(lambda x: re.sub(r'^\D+', '', x.group()), raw_versions)
    # use LooseVersion to account for (1.10 < 1.9 = True)
    versions = sorted(clean_versions, key=LooseVersion)
    if (len(versions) < 1):
        raise Exception(
            'Unable to find any versions from {0}, this is not expected'.format(url))
    return versions[((len(versions) - 1))]

def get_sbt_url(url, pattern):
    """Returns cached SBT from GitHub download to avoid GitHub rate limiting and the like"""
    return "https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/sbt-latest.tgz"
    #raw_html = urllib2.urlopen(url).read()
    #raw_urls = re.findall(pattern, raw_html)
    #if (len(raw_urls) < 1):
    #    raise Exception(
    #        'Unable to find any urls from {0}, this is not expected'.format(url))
    #return raw_urls[((len(raw_urls) - 1))]

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Get Latest Version of Java Tools.')
    parser.add_argument('get', type=str, choices=['ant', 'gradle', 'maven', 'sbt'], 
            help='get latest version of desired tool')
    args = parser.parse_args()
    if args.get == 'ant':
        # Ant 1.10 requires JDK 8, so we need to use Ant 1.9.x
        # https://stackoverflow.com/a/49304867/8049180
        print("1.9.13")
        # print(get_latest_version(ANT_URL, ANT_VERSION_PATTERN))
    if args.get == 'gradle':
        # Gradle 5.x requires JDK 8, so we need to use Gradle 4.x
        print("4.10.2")
        # print(get_latest_version(GRADLE_URL, GRADLE_VERSION_PATTERN))
    if args.get == 'maven':
        print(get_latest_version(MAVEN_URL, MAVEN_VERSION_PATTERN))
    if args.get == 'sbt':
        # TODO: figure out what older versions of sbt work with JDK 7. Neither 1.1.6 nor 1.0.4 nor 1.0.0 worked.
        # https://www.scala-sbt.org/1.0/docs/sbt-1.1-Release-Notes.html 
        # https://www.scala-sbt.org/download.html
        print("https://piccolo.link/sbt-0.13.15.tgz")
        # print(get_sbt_url(SBT_URL, SBT_URL_PATTERN))
